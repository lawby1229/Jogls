/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * opGLFrame.java
 *
 * Created on 2011-4-7, 19:46:08
 */

package org.yourorghere;

import ThreeViews.ThreeViews;
import com.sun.opengl.util.Animator;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.media.opengl.GLCapabilities;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import sun.java2d.pipe.RenderBuffer;


/**
 *
 * @author Law
 */
public class opGLFrame extends javax.swing.JFrame {
        private Animator animator;
        private GLRenderer render;
        Point p1Now;
        Point p2Now;
        File  filetemp;//保存所得到文件的file类型文件
        JFileChooser jt;
    /** Creates new form opGLFrame */
    public opGLFrame() {
        super("SMF图形观测软件");
           initComponents();
        render=new GLRenderer();
        gLJPanel1.addGLEventListener(render);
        animator = new Animator(gLJPanel1);

        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                // Run this on another thread than the AWT event queue to
                // make sure the call to Animator.stop() completes before
                // exiting
                new Thread(new Runnable() {

                    public void run() {
                        animator.stop();
                        System.exit(0);
                    }
                }).start();
            }
        });
    }
        public void setVisible(boolean show){
        if(!show)
            animator.stop();
        super.setVisible(show);
        if(!show)
            animator.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg_CordinateChange = new javax.swing.ButtonGroup();
        bg_OPmeth = new javax.swing.ButtonGroup();
        bg_x = new javax.swing.ButtonGroup();
        bg_XCordinateChange = new javax.swing.ButtonGroup();
        gLJPanel1 = new javax.media.opengl.GLJPanel(createGLCapabilites());
        cb_TY = new javax.swing.JComboBox();
        cb_Change = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jrb_lineHide = new javax.swing.JRadioButton();
        jrb_trueLight = new javax.swing.JRadioButton();
        bt_load = new javax.swing.JButton();
        bt_Explore = new javax.swing.JButton();
        jtf_filePath = new javax.swing.JTextField();
        jrb_none = new javax.swing.JRadioButton();
        jrb_delBackFace = new javax.swing.JRadioButton();
        bt_3ViewsMap = new javax.swing.JButton();
        p_Zty = new javax.swing.JPanel();
        jrb_XZ = new javax.swing.JRadioButton();
        jrb_YZ = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        bt_lookAt = new javax.swing.JButton();
        bt_faceHide = new javax.swing.JButton();
        l_radix = new javax.swing.JLabel();
        p_Gen = new javax.swing.JPanel();
        tf_dX = new javax.swing.JTextField();
        tf_dZ = new javax.swing.JTextField();
        tf_dY = new javax.swing.JTextField();
        jrb_XZZ = new javax.swing.JRadioButton();
        jrb_PY = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        gLJPanel1.setPreferredSize(new java.awt.Dimension(650, 550));
        gLJPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gLJPanel1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout gLJPanel1Layout = new javax.swing.GroupLayout(gLJPanel1);
        gLJPanel1.setLayout(gLJPanel1Layout);
        gLJPanel1Layout.setHorizontalGroup(
            gLJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 778, Short.MAX_VALUE)
        );
        gLJPanel1Layout.setVerticalGroup(
            gLJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );

        cb_TY.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "平行投影", "透视投影" }));
        cb_TY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_TYActionPerformed(evt);
            }
        });

        cb_Change.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "图形平移", "图形旋转" }));

        jrb_lineHide.setText("线消隐");
        jrb_lineHide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_lineHideActionPerformed(evt);
            }
        });

        jrb_trueLight.setText("真实感");
        jrb_trueLight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_trueLightActionPerformed(evt);
            }
        });

        bt_load.setText("加载");
        bt_load.setEnabled(false);
        bt_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_loadActionPerformed(evt);
            }
        });

        bt_Explore.setText("浏览");
        bt_Explore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ExploreActionPerformed(evt);
            }
        });

        jrb_none.setSelected(true);
        jrb_none.setText("无");
        jrb_none.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_noneActionPerformed(evt);
            }
        });

        jrb_delBackFace.setText("后向面去除");
        jrb_delBackFace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_delBackFaceActionPerformed(evt);
            }
        });

        bt_3ViewsMap.setText("生成三视图");
        bt_3ViewsMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_3ViewsMapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(bt_3ViewsMap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bt_load, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bt_Explore, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtf_filePath, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jrb_trueLight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jrb_lineHide, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jrb_none, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jrb_delBackFace, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                        .addGap(12, 12, 12))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jrb_delBackFace)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrb_none)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrb_lineHide)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrb_trueLight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtf_filePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_Explore)
                .addGap(2, 2, 2)
                .addComponent(bt_load)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_3ViewsMap)
                .addContainerGap())
        );

        bg_OPmeth.add(jrb_lineHide);
        bg_OPmeth.add(jrb_trueLight);
        bg_OPmeth.add(jrb_none);

        jrb_XZ.setSelected(true);
        jrb_XZ.setText("视角横向变换");

        jrb_YZ.setText("视角纵向变换");

        jTextField1.setText("2");

        jTextField2.setText("3");

        jTextField3.setText("4");

        bt_lookAt.setText("视角");
        bt_lookAt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_lookAtActionPerformed(evt);
            }
        });

        bt_faceHide.setText("面消隐");
        bt_faceHide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_faceHideActionPerformed(evt);
            }
        });

        l_radix.setText("像素颗粒：0.010");

        javax.swing.GroupLayout p_ZtyLayout = new javax.swing.GroupLayout(p_Zty);
        p_Zty.setLayout(p_ZtyLayout);
        p_ZtyLayout.setHorizontalGroup(
            p_ZtyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_ZtyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(p_ZtyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_radix, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(bt_lookAt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jrb_XZ)
                    .addComponent(jrb_YZ)
                    .addComponent(bt_faceHide, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)))
        );
        p_ZtyLayout.setVerticalGroup(
            p_ZtyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_ZtyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrb_XZ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrb_YZ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_lookAt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_faceHide)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_radix, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
        );

        bg_CordinateChange.add(jrb_XZ);
        bg_CordinateChange.add(jrb_YZ);

        tf_dX.setText("1");

        tf_dZ.setText("0");

        tf_dY.setText("0");

        jrb_XZZ.setText("视角旋转");
        jrb_XZZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_XZZActionPerformed(evt);
            }
        });

        jrb_PY.setText("视角平移");
        jrb_PY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_PYActionPerformed(evt);
            }
        });

        jLabel1.setText("旋转平面法向量");

        jLabel2.setText("X：");

        jLabel3.setText("Y：");

        jLabel4.setText("Z：");

        p_Gen.setVisible(false);

        javax.swing.GroupLayout p_GenLayout = new javax.swing.GroupLayout(p_Gen);
        p_Gen.setLayout(p_GenLayout);
        p_GenLayout.setHorizontalGroup(
            p_GenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_GenLayout.createSequentialGroup()
                .addGroup(p_GenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(p_GenLayout.createSequentialGroup()
                        .addGroup(p_GenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(p_GenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_dZ, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                            .addComponent(tf_dX, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                            .addComponent(tf_dY)))
                    .addComponent(jrb_PY, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(jrb_XZZ, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                .addContainerGap())
        );
        p_GenLayout.setVerticalGroup(
            p_GenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_GenLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(p_GenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_dX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(4, 4, 4)
                .addGroup(p_GenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_dY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(p_GenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_dZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrb_PY)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrb_XZZ)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        bg_XCordinateChange.add(jrb_XZZ);
        bg_XCordinateChange.add(jrb_PY);

        jMenu1.setText("操作");

        jMenuItem2.setText("键盘项目");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("帮助");

        jMenuItem1.setText("关于");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gLJPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(p_Zty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(p_Gen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cb_Change, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cb_TY, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cb_TY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_Change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(p_Gen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(p_Zty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(68, 68, 68)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addComponent(gLJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-941)/2, (screenSize.height-709)/2, 941, 709);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved
       int dir = evt.getWheelRotation();
  // down
  if (dir == 1) {
      if(render.isZty)
      GLRenderer.Sizen=GLRenderer.Sizen-30;
      else{
           if(GLRenderer.far>-50f)
            GLRenderer.far=  GLRenderer.far-0.5f;
              GLRenderer.N_BASE.set(2, Math.abs((double)GLRenderer.far));
            render.N.set(2, Math.abs((double)GLRenderer.far));
      }
  }
    // up
    else if (dir == -1) {
     if(render.isZty)
      GLRenderer.Sizen=GLRenderer.Sizen+30;
     else{
         if(GLRenderer.far<-1.5f)
         GLRenderer.far=  GLRenderer.far+0.5f;
            GLRenderer.N_BASE.set(2, Math.abs((double)GLRenderer.far));
            render.N.set(2, Math.abs((double)GLRenderer.far));
     }
  }
       System.out.println(GLRenderer.Sizen);
       if(GLRenderer.Sizen>=1200)
           FaceHide_Facade.delta_=0.001;
       else if(GLRenderer.Sizen<1200 && GLRenderer.Sizen>=800)
           FaceHide_Facade.delta_=0.003;
       else if(GLRenderer.Sizen<800 && GLRenderer.Sizen>=500)
           FaceHide_Facade.delta_=0.005;
       else if(GLRenderer.Sizen<500 && GLRenderer.Sizen>=300)
           FaceHide_Facade.delta_=0.008;
       else if(GLRenderer.Sizen<300 )
           FaceHide_Facade.delta_=0.010;
       l_radix.setText(" 像素颗粒："+FaceHide_Facade.delta_);
       System.out.print(GLRenderer.far);
       repaint();
    }//GEN-LAST:event_formMouseWheelMoved

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        p2Now=evt.getPoint();
        if(render.isZty){
            double delta;
            double i_cos;
            double i_sin;
            double N0,N1,N2;
            if(jrb_XZ.isSelected()){
                delta=p2Now.x-p1Now.x;
                delta=delta/100;
                i_cos= Math.cos(delta);
                i_sin= Math.sin(delta);
        //        (render.N).elementAt(0)=delta;
                 N0=(GLRenderer.N_BASE.elementAt(0)*i_cos-GLRenderer.N_BASE.elementAt(2)*i_sin);
                N2=(GLRenderer.N_BASE.elementAt(2)*i_cos+GLRenderer.N_BASE.elementAt(0)*i_sin);
                render.N.set(0,N0);
                render.N.set(2,N2);
            }
            else{
                 delta=p2Now.y-p1Now.y;
                 delta=delta/100;
                 i_cos= Math.cos(delta);
                 i_sin= Math.sin(delta);
        //        (render.N).elementAt(0)=delta;
                  N1=(GLRenderer.N_BASE.elementAt(2)*i_cos-GLRenderer.N_BASE.elementAt(1)*i_sin);
                  N2=(GLRenderer.N_BASE.elementAt(1)*i_cos+GLRenderer.N_BASE.elementAt(2)*i_sin);
                  if(N1>0)
                  {
                      render.N.set(2,N1);
                      render.N.set(1,N2);
                  }
                  System.out.println("Z:"+N1);
                   System.out.println("Y:"+N2);
            }
        }
        else
        {
             double deltaX,deltaY;
            double i_cos;
            if(jrb_PY.isSelected())
            {
                double dx=Double.parseDouble(tf_dX.getText());
                double dy=Double.parseDouble(tf_dY.getText());
                double dz=Double.parseDouble(tf_dY.getText());
                deltaX=p2Now.x-p1Now.x;
                deltaY=p2Now.y-p1Now.y;
                deltaX=deltaX/40;
                deltaY=-deltaY/40;
                render.N2_py.set(0, deltaX+GLRenderer.N2_BASE_py.elementAt(0));
                render.N2_py.set(1, deltaY+GLRenderer.N2_BASE_py.elementAt(1));
            }
            else if(jrb_XZZ.isSelected())
            {
                double dx=Double.parseDouble(tf_dX.getText());
                double dy=Double.parseDouble(tf_dY.getText());
                double dz=Double.parseDouble(tf_dY.getText());
                deltaX=p2Now.x-p1Now.x;
                deltaX=deltaX/25;
                render.N2_xz.set(0, deltaX+GLRenderer.N2_BASE_xz.elementAt(0));
                render.N2_xz.set(1, dx);
                render.N2_xz.set(2, dy);
                render.N2_xz.set(3, dz);


            }
        }
//        render.N.elementAt(2)=render.N.elementAt(2)*Math.cos(delta)+render.N.elementAt(0)*Math.sin(delta);
//        System.out.println("N:"+Double.toString( render.N.elementAt(0))+" "+Double.toString( render.N.elementAt(1))+" "+Double.toString( render.N.elementAt(2)));
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        p1Now=evt.getPoint();
        gLJPanel1.requestFocus();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        for(int i =0;i<3;i++)
        GLRenderer.N_BASE.set(i, render.N.elementAt(i));
 
        GLRenderer.N2_BASE_py.set(0,  render.N2_py.elementAt(0));
         GLRenderer.N2_BASE_py.set(1,  render.N2_py.elementAt(1));
        GLRenderer.N2_BASE_xz.set(0, render.N2_xz.elementAt(0));

    }//GEN-LAST:event_formMouseReleased

    private void bt_lookAtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_lookAtActionPerformed
        repaint();
        double xt=Double.parseDouble(jTextField1.getText());
        double yt=Double.parseDouble(jTextField2.getText());
        double zt=Double.parseDouble(jTextField3.getText());
        GLRenderer.N_BASE.set(0, xt);
            GLRenderer.N_BASE.set(1, yt);
            GLRenderer.N_BASE.set(2, zt);
         render.N.set(0,xt);
         render.N.set(1,yt);
         render.N.set(2,zt);
        repaint();
    }//GEN-LAST:event_bt_lookAtActionPerformed

    private void bt_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_loadActionPerformed
      render.loadSMF(jtf_filePath.getText());
       render.FaceHideBitmap=null;
//      render.loadSMF("smfmodel/polyhedron.smf");
      repaint();
    }//GEN-LAST:event_bt_loadActionPerformed

    private void bt_faceHideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_faceHideActionPerformed
       if(render.vp!=null && render.vf!=null)
       {
            render.LineHide=false;
           render.TrueLight=false;
           if(jrb_lineHide.isSelected())
            jrb_none.setSelected(true);
            FaceHide_Facade fh=new FaceHide_Facade(render.vp, render.vf,render.N);
           GL_Color p[][]=fh.runFaceHide();
           render.FaceHideBitmap=p;
           repaint();
       }
    }//GEN-LAST:event_bt_faceHideActionPerformed

    private void bt_ExploreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ExploreActionPerformed
        if(filetemp==null )
            jt=new JFileChooser(new File("smfmodel/"));  //选择器添加
          else
            jt=new JFileChooser(filetemp);
        jt.setMultiSelectionEnabled(false);  //可以多选
        FileNameExtensionFilter ft=new FileNameExtensionFilter("SMF file", "smf");//新建只能选择smf文件
        jt.addChoosableFileFilter(ft);//选择器添加选择属性
        jt.showOpenDialog(null);//弹出选择器
        filetemp=jt.getSelectedFile();//得到选择器选择的文件
        System.out.print(filetemp.getPath());
        jtf_filePath.setText(filetemp.getPath());
        if(filetemp!=null)
            bt_load.setEnabled(true);
    }//GEN-LAST:event_bt_ExploreActionPerformed

    private void jrb_lineHideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_lineHideActionPerformed
        if(jrb_lineHide.isSelected())
            render.LineHide=true;
        else
            render.LineHide=false;
         render.FaceHideBitmap=null;
         render.TrueLight=false;
        repaint();
    }//GEN-LAST:event_jrb_lineHideActionPerformed

    private void jrb_trueLightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_trueLightActionPerformed
         if(jrb_trueLight.isSelected())
            render.TrueLight=true;
        else
            render.TrueLight=false;
         render.FaceHideBitmap=null;
         render.LineHide=false;
        repaint();
    }//GEN-LAST:event_jrb_trueLightActionPerformed

    private void cb_TYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_TYActionPerformed
        if(cb_TY.getSelectedItem().toString().endsWith("平行投影"))
        {
            GLRenderer.N_BASE.set(0, 3.0);
            GLRenderer.N_BASE.set(1, 3.0);
            GLRenderer.N_BASE.set(2, Math.abs((double)GLRenderer.far));
            render.N.set(0, 3.0);
            render.N.set(1, 3.0);
            render.N.set(2, 3.0);
            p_Zty.setVisible(true);
            p_Gen.setVisible(false);
            render.isZty=true;
        }
        else
        {
            p_Zty.setVisible(false);
            p_Gen.setVisible(true);
            render.isZty=false;
            GLRenderer.N_BASE.set(0, 0.0);
            GLRenderer.N_BASE.set(1, 0.0);
            GLRenderer.N_BASE.set(2, Math.abs((double)GLRenderer.far));
            render.N.set(0, 0.0);
            render.N.set(1, 0.0);
            render.N.set(2, Math.abs((double)GLRenderer.far));
            render.FaceHideBitmap=null;

        }
        repaint();
    }//GEN-LAST:event_cb_TYActionPerformed

    private void jrb_delBackFaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_delBackFaceActionPerformed
       if(jrb_delBackFace.isSelected())
        render.DelBackFace=true;
       else
           render.DelBackFace=false;
       repaint();
    }//GEN-LAST:event_jrb_delBackFaceActionPerformed

    private void jrb_noneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_noneActionPerformed
       if(jrb_none.isSelected()){
            render.LineHide=false;
            render.TrueLight=false;
               }
         render.FaceHideBitmap=null;
        repaint();
    }//GEN-LAST:event_jrb_noneActionPerformed

    private void jrb_PYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_PYActionPerformed

    }//GEN-LAST:event_jrb_PYActionPerformed

    private void jrb_XZZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_XZZActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_XZZActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
      JOptionPane.showMessageDialog(null, "开发者：袁博志(李傲伟)\n版本：傲伟画SMF查看器V1.0","关于",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void bt_3ViewsMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_3ViewsMapActionPerformed
     
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 try{
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                }catch(Exception ex) {
                    Logger.getLogger(getClass().getName()).log(Level.INFO, "can not enable system look and feel", ex);
                }
                  ThreeViews app= new ThreeViews(render.vp, render.vf,render.N);
//                  app.setDefaultCloseOperation(EXIT_ON_CLOSE);
                app.setVisible(true);
            }
        });
    }//GEN-LAST:event_bt_3ViewsMapActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
       
    }//GEN-LAST:event_formKeyPressed

    private void gLJPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gLJPanel1KeyPressed
         int KEYcoe=evt.getKeyCode();
//         if(FaceHide_Facade.delta_==)
        
         if(cb_Change.getSelectedItem().equals("图形平移"))
         {
             double moveD=FaceHide_Facade.delta_*10;
             switch(KEYcoe)
                {
                    case KeyEvent.VK_UP:
                        render.moveUp(moveD);
                        break;
                    case KeyEvent.VK_DOWN:
                         render.moveDown(moveD);
                        break;
                    case KeyEvent.VK_LEFT:
                         render.moveLeft(moveD);
                        break;
                    case KeyEvent.VK_RIGHT:
                         render.moveRight(moveD);
                        break;
                    case KeyEvent.VK_W:
                         render.moveIn(moveD);
                        break;
                    case KeyEvent.VK_S:
                         render.moveOut(moveD);
                        break;

                }
         }
         else if(cb_Change.getSelectedItem().equals("图形旋转"))
         {
                 double moveD=0.2;
                 switch(KEYcoe)
                {
                    case KeyEvent.VK_UP:
                        render.turnYZ(-moveD);
                        break;
                    case KeyEvent.VK_DOWN:
                         render.turnYZ(moveD);
                        break;
                    case KeyEvent.VK_LEFT:
                         render.turnXZ(moveD);
                        break;
                    case KeyEvent.VK_RIGHT:
                         render.turnXZ(-moveD);
                        break;
                    case KeyEvent.VK_W:
                         render.turnXY(moveD);
                        break;
                    case KeyEvent.VK_S:
                         render.turnXY(-moveD);
                        break;

                }
         }
        repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_gLJPanel1KeyPressed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
             JOptionPane.showMessageDialog(null, "首先用鼠标点击该画布，让其获得焦点。\n平移：上，下，左，右，W，S键！\n旋转：上，下，左，右，W，S键！","键位",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 try{
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                }catch(Exception ex) {
                    Logger.getLogger(getClass().getName()).log(Level.INFO, "can not enable system look and feel", ex);
                }
                opGLFrame glf=new opGLFrame();
            
                glf.setVisible(true);
            }
        });
    }
  private GLCapabilities createGLCapabilites() {

        GLCapabilities capabilities = new GLCapabilities();
        capabilities.setHardwareAccelerated(true);

        // try to enable 2x anti aliasing - should be supported on most hardware
        capabilities.setNumSamples(2);
        capabilities.setSampleBuffers(true);

        return capabilities;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg_CordinateChange;
    private javax.swing.ButtonGroup bg_OPmeth;
    private javax.swing.ButtonGroup bg_XCordinateChange;
    private javax.swing.ButtonGroup bg_x;
    private javax.swing.JButton bt_3ViewsMap;
    private javax.swing.JButton bt_Explore;
    private javax.swing.JButton bt_faceHide;
    private javax.swing.JButton bt_load;
    private javax.swing.JButton bt_lookAt;
    private javax.swing.JComboBox cb_Change;
    private javax.swing.JComboBox cb_TY;
    private javax.media.opengl.GLJPanel gLJPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JRadioButton jrb_PY;
    private javax.swing.JRadioButton jrb_XZ;
    private javax.swing.JRadioButton jrb_XZZ;
    private javax.swing.JRadioButton jrb_YZ;
    private javax.swing.JRadioButton jrb_delBackFace;
    private javax.swing.JRadioButton jrb_lineHide;
    private javax.swing.JRadioButton jrb_none;
    private javax.swing.JRadioButton jrb_trueLight;
    private javax.swing.JTextField jtf_filePath;
    private javax.swing.JLabel l_radix;
    private javax.swing.JPanel p_Gen;
    private javax.swing.JPanel p_Zty;
    private javax.swing.JTextField tf_dX;
    private javax.swing.JTextField tf_dY;
    private javax.swing.JTextField tf_dZ;
    // End of variables declaration//GEN-END:variables

}
